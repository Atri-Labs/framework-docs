"use strict";(self.webpackChunkatriframework=self.webpackChunkatriframework||[]).push([[2135],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=a,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(f,c(c({ref:t},l),{},{components:r})):n.createElement(f,c({ref:t},l))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var p=2;p<o;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7060:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"Scatter Chart",description:"Adding custom properties to a component"},c=void 0,i={unversionedId:"comp-reference/charts/scatter-chart",id:"comp-reference/charts/scatter-chart",title:"Scatter Chart",description:"Adding custom properties to a component",source:"@site/docs/comp-reference/charts/scatter-chart.md",sourceDirName:"comp-reference/charts",slug:"/comp-reference/charts/scatter-chart",permalink:"/comp-reference/charts/scatter-chart",draft:!1,editUrl:"https://github.com/Atri-Labs/framework-docs/tree/main/docs/comp-reference/charts/scatter-chart.md",tags:[],version:"current",frontMatter:{title:"Scatter Chart",description:"Adding custom properties to a component"},sidebar:"docs",previous:{title:"Line Chart",permalink:"/comp-reference/charts/line-chart"},next:{title:"Histogram Chart",permalink:"/comp-reference/charts/histogram-chart"}},s={},p=[{value:"Custom properties of scatter chart",id:"custom-properties-of-scatter-chart",level:2},{value:"<code>Scatter.custom.data</code>",id:"scattercustomdata",level:3},{value:"<code>Scatter.custom.options</code>",id:"scattercustomoptions",level:3},{value:"Styling properties for bar chart",id:"styling-properties-for-bar-chart",level:2}],l={toc:p};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"custom-properties-of-scatter-chart"},"Custom properties of scatter chart"),(0,a.kt)("p",null,"All the custom properties of scatter chart must be accessed using ",(0,a.kt)("inlineCode",{parentName:"p"},"Scatter.custom"),"."),(0,a.kt)("h3",{id:"scattercustomdata"},(0,a.kt)("inlineCode",{parentName:"h3"},"Scatter.custom.data")),(0,a.kt)("p",null,"Put data into the scatter chart by following the example shown below. Here we are plotting ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," field on x-axis. The field names in the provided are fixed to ",(0,a.kt)("inlineCode",{parentName:"p"},"x"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"z"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," value will be plotted on x-axis, ",(0,a.kt)("inlineCode",{parentName:"p"},"y")," on y-axis and ",(0,a.kt)("inlineCode",{parentName:"p"},"z")," value will determine the diameter of the cirle."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'at.scatter.custom.data = [\n    # set 1 of point\n    [\n        { "x": 100, "y": 200, "z": 200 },\n        { "x": 120, "y": 100, "z": 260 },\n        { "x": 170, "y": 300, "z": 400 },\n        { "x": 140, "y": 250, "z": 280 },\n        { "x": 150, "y": 400, "z": 500 },\n        { "x": 110, "y": 200, "z": 280 },\n    ],\n    # set 2 of point\n    [\n        { "x": 200, "y": 260, "z": 300 },\n        { "x": 240, "y": 290, "z": 350 },\n        { "x": 190, "y": 290, "z": 350 },\n        { "x": 198, "y": 250, "z": 270 },\n        { "x": 180, "y": 280, "z": 340 },\n        { "x": 210, "y": 220, "z": 280 },\n    ]\n    ]\n')),(0,a.kt)("h3",{id:"scattercustomoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"Scatter.custom.options")),(0,a.kt)("p",null,"Continuing from the previous example, you can select set of points to animate when the page loads by setting ",(0,a.kt)("inlineCode",{parentName:"p"},"Scatter.custom.options"),'. In this example, we are animating "max" for but not for "min".'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# The order of options should match the order in data\nat.Scatter.custom.options = {\n    # options for set 1 of point\n    {"name": "min", "animate": False},\n    # you can keep the dictionary empty if you want the defaults to kick-in\n    # options for set 2 of point\n    {}\n}\n')),(0,a.kt)("p",null,"Similarly, we can set other fields in ",(0,a.kt)("inlineCode",{parentName:"p"},"Scatter.custom.options"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'at.Bar.custom.options = {\n    [\n        {\n            "name": "min"\n            "fill": "red",\n            "stroke": "orange",\n            "shape": "circle"\n        },\n        {\n            "name": "max"\n            "fill": "red",\n            "stroke": "orange",\n            "shape": "cross"\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"The available values for ",(0,a.kt)("inlineCode",{parentName:"p"},"shape")," option are 'circle', 'cross', 'diamond', 'square', 'star', 'triangle', 'wye'."),(0,a.kt)("h2",{id:"styling-properties-for-bar-chart"},"Styling properties for bar chart"),(0,a.kt)("p",null,"Same as other components with some fields removed as deemed not applicable for charts."))}m.isMDXComponent=!0}}]);