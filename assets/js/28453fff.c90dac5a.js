"use strict";(self.webpackChunkatriframework=self.webpackChunkatriframework||[]).push([[6822],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1747:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const r={title:"Highlights",description:"Some desc"},i="Gotchas",l={unversionedId:"highlights",id:"highlights",title:"Highlights",description:"Some desc",source:"@site/docs/highlights.md",sourceDirName:".",slug:"/highlights",permalink:"/next/highlights",draft:!1,editUrl:"https://github.com/Atri-Labs/framework-docs/tree/main/docs/highlights.md",tags:[],version:"current",frontMatter:{title:"Highlights",description:"Some desc"},sidebar:"docs"},s={},p=[{value:"Pre-requisites Needed",id:"pre-requisites-needed",level:2},{value:"Creating an initial scaffold",id:"creating-an-initial-scaffold",level:2},{value:"Installing NodeJS packages",id:"installing-nodejs-packages",level:2},{value:"Test the build",id:"test-the-build",level:2}],c={toc:p};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"gotchas"},"Gotchas"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"This version has been tested extensively on Chrome 100+ versions and it is fully functional. However, it is possible that it may not work as intended on other browsers like Firefox..")),(0,o.kt)("h1",{id:"creating-an-atri-app"},"Creating an Atri app"),(0,o.kt)("h2",{id:"pre-requisites-needed"},"Pre-requisites Needed"),(0,o.kt)("p",null,"To get started, it is important to have certain tools installed on your system. These includes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"NodeJS >= 16"),", "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"npm"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"npx"))),(0,o.kt)("p",null,"These tools are essential for running the necessary software and ensuring smooth execution of programs."),(0,o.kt)("h2",{id:"creating-an-initial-scaffold"},"Creating an initial scaffold"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npx @atrilabs/new\n")),(0,o.kt)("p",null,"When creating a package, you'll be asked a few questions, including what name you'd like to give it. It's important to note that the name you select will also be used for the corresponding directory that will be generated."),(0,o.kt)("p",null,"The Structure of the directory will look as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"project_dir\n|-- manifests               # New React components are created here for drag-drop\n|-- pages                   # Works almost like NextJS\n|-- public                  # It contiains assets & some CSS files\n|-- .eslintrc.json\n|-- package.json\n")),(0,o.kt)("h2",{id:"installing-nodejs-packages"},"Installing NodeJS packages"),(0,o.kt)("p",null,"Before installing the NodeJS packages, it is important to be in the project directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd \\<project_dir\\>\nnpm install\n")),(0,o.kt)("h1",{id:"start-the-development-servers"},"Start the development servers"),(0,o.kt)("p",null,"it is required to initiate four development servers, with each server being responsible for handling a specific task."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Starting the frontend server")),(0,o.kt)("p",null,"This will launch the server and make your website accessible via your browser."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run dev\n")),(0,o.kt)("p",null,"This will open up ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:3000")," in your browser."),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Starting Python glue code generator")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run dev-py-app\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Starting the visual editor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run editor\n")),(0,o.kt)("p",null,"Visit ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:4000")," in your browser to use the visual builder.\nThis will allow you to create and edit content with a more user-friendly interface, including features such as drag-and-drop and formatting tools."),(0,o.kt)("h1",{id:"canvaszone---one-of-atris-innovation"},"CanvasZone - One of Atri's innovation"),(0,o.kt)("p",null,"The rectangle in the editor comes from the ",(0,o.kt)("inlineCode",{parentName:"p"},'<CanvasZone id={"main"}/>')," in the React code in ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/index.jsx")," file. You can create a ",(0,o.kt)("inlineCode",{parentName:"p"},"CanvasZone")," anywhere in your React code. You can pass ",(0,o.kt)("inlineCode",{parentName:"p"},"styles")," attribute to the ",(0,o.kt)("inlineCode",{parentName:"p"},"CanvasZone")," component like this"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { CanvasZone } from "@atrilabs/canvas-zone";\n\n<CanvasZone\n    id={"main"}\n    styles={{ height: "400px", width: "400px", display: "inline-block" }}\n/>;\n')),(0,o.kt)("h1",{id:"drag-drop-components-in-the-canvaszone"},"Drag-Drop components in the CanvasZone"),(0,o.kt)("p",null,"You will notice a rectangle (CanvasZone) in the editor. You can start by dropping a component in that rectangle. To drop a component, click on the ",(0,o.kt)("inlineCode",{parentName:"p"},"+")," icon on top-left side of the editor. You will find a grid of components for drag-drop."),(0,o.kt)("h1",{id:"write-react-code"},"Write React code"),(0,o.kt)("p",null,"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"pages/index.jsx")," file you can modify the existing code to anything that you usually write in any React codebase."),(0,o.kt)("p",null,"For example,"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { CanvasZone } from "@atrilabs/canvas-zone";\nimport { useEffect } from "react";\n\nexport default function () {\n    useEffect(() => {\n        // handle your side effects here like you usually do\n    }, []);\n\n    return (\n        <div>\n            <div>You can add your own code here!</div>\n            <CanvasZone id={"main"} />\n        </div>\n    );\n}\n')),(0,o.kt)("p",null,"You can add as many ",(0,o.kt)("inlineCode",{parentName:"p"},"CanvasZone")," as you want:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { CanvasZone } from "@atrilabs/canvas-zone";\nimport { useEffect } from "react";\n\nexport default function () {\n    return (\n        <div>\n            <div>You can add your own code here!</div>\n            <CanvasZone id={"main"} />\n            <div>Some other code here</div>\n            <CanvasZone id={"main2"} />\n        </div>\n    );\n}\n')),(0,o.kt)("p",null,"Note that each CanvasZone in a page must have a unique id."),(0,o.kt)("h1",{id:"create-a-new-drag-drop-component-in-react"},"Create a new drag-drop component in React"),(0,o.kt)("p",null,"You can write your React code the way you write them in any other framework, for example, you can make API calls and handle side effects in ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect"),". There are two steps (three steps in some cases) to create a drag-drop component:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create the React component inside ",(0,o.kt)("inlineCode",{parentName:"li"},"manifests")," directory. The React component must be wrapped around ",(0,o.kt)("inlineCode",{parentName:"li"},"React.forwardRef")," and it must assign ",(0,o.kt)("inlineCode",{parentName:"li"},"ref")," to the topmost element.")),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"manifests/Some.jsx")," file with the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const SomeComponent = React.forwardRef((props, ref) => {\n    return (\n        <div ref={ref} className={props.className}>\n            Some Component\n        </div>\n    );\n});\n\nexport default SomeComponent;\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create a manifest for the React Component. A manifest describes how the component should behave inside the editor and how the build tools should handle it.")),(0,o.kt)("p",null,"Create a ",(0,o.kt)("inlineCode",{parentName:"p"},"manifests/Some.manifest.jsx")," file with the following code (Notice the file name pattern):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},'import { createComponentManifest } from "@atrilabs/utils";\n\nexport default createComponentManifest({ name: "Some" });\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create a development React component. This step is optional because you might need it only for components that might have to behave a bit different inside editor and in actual app. One example could be the Flex component that we provide in the editor. The ",(0,o.kt)("inlineCode",{parentName:"li"},"Flex")," component must have some ",(0,o.kt)("inlineCode",{parentName:"li"},"height")," if there are no children element inside it so that it provides some room for the user to drop a new component.")),(0,o.kt)("p",null,"To create a development component, create ",(0,o.kt)("inlineCode",{parentName:"p"},"manifests/Some.dev.jsx")," file with following code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const SomeDevComponent = React.forwardRef((props, ref) => {\n    return (\n        <div ref={ref} className={props.className}>\n            Some Dev Component\n        </div>\n    );\n});\n\nexport default SomeDevComponent;\n")),(0,o.kt)("p",null,"Note: You need to stop the development server and restart it whenever you add a new component. You don't need to do this when you modify a component and hot-reloading will kick in whenever you make a change."),(0,o.kt)("h1",{id:"handle-user-event-in-the-backend-using-python"},"Handle user event in the backend using Python"),(0,o.kt)("p",null,"Currently we support FastAPI in the backend and have plans to support Django as well in the near future. You can see this video to know more about how we are writing backend."),(0,o.kt)("h1",{id:"build-your-applicaton"},"Build your applicaton"),(0,o.kt)("p",null,"Once you have made all the changes you want in the app, you can run the following code to build your application."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"npm run build\n")),(0,o.kt)("p",null,"If you are using a virtual environment, make sure you run this command from inside the virtual environment."),(0,o.kt)("h2",{id:"test-the-build"},"Test the build"),(0,o.kt)("p",null,"To check if the server side code has built properly, we can the output of server side rendering. To do server side rendering, open up NodeJS shell using ",(0,o.kt)("inlineCode",{parentName:"p"},"node")," in your terminal and then write the following code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-nodejs"},'> const index = require("dist/app-build/server/index.js")\n> const html = index.default.renderPage()\n')),(0,o.kt)("h1",{id:"serve-your-application-in-production"},"Serve your application in production"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run serve\n")),(0,o.kt)("p",null,"You will get the HTML code in ",(0,o.kt)("inlineCode",{parentName:"p"},"html")," variable above."),(0,o.kt)("h1",{id:"publish-a-react-drag-drop-component-package"},"Publish a React drag-drop component package"),(0,o.kt)("p",null,"To publish your React package to ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," so that other users can install it in their Atri project, you will have to create a project with following directory structure."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"project-dir\n|--src\n|   |-- manifests\n|   |   |-- Some.jsx            # A component\n|   |   |-- Some.manifest.jsx   # Manifest for Some component\n|   |   |-- Other.jsx           # Another component\n|   |   |-- Other.manifest.jsx  # Manifest for Other component\n|   |-- manifest.config.json\n|--package.json\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," should look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "name": "npm_package_name",\n    "version": "1.0.0",\n    "description": "description",\n    "author": "author_name <author_email>",\n    "homepage": "https://github.com/cruxcode/atrilabs-engine#readme",\n    "main": "./src/manifest.config.js",\n    "files": [\n        "src",\n        "dist/manifests.bundle.js",\n        "dist/manifests.bundle.js.map"\n    ],\n    "publishConfig": {\n        "access": "public"\n    },\n    "repository": {\n        "type": "git",\n        "url": "git+https://github.com/cruxcode/atrilabs-engine.git"\n    },\n    "scripts": {\n        "build": "gen-py-classes -n ../../node_modules -i \'@atrilabs/utils\' -a \'@atrilabs/utils\'"\n    },\n    "dependencies": {\n        "@atrilabs/app-design-forest": "^1.0.0-alpha.13",\n        "@atrilabs/commands": "^1.0.0-alpha.13",\n        "@atrilabs/component-icon-manifest-schema": "^1.0.0-alpha.13",\n        "@atrilabs/core": "^1.0.0-alpha.13",\n        "@atrilabs/design-system": "^1.0.0-alpha.13",\n        "@atrilabs/layer-types": "^1.0.0-alpha.13",\n        "@atrilabs/react-component-manifest-schema": "^1.0.0-alpha.13",\n        "typescript": "^4.6.4"\n    },\n    "devDependencies": {\n        "@babel/cli": "^7.17.10",\n        "@babel/core": "^7.18.5",\n        "@babel/preset-env": "^7.18.2",\n        "@babel/preset-react": "^7.17.12",\n        "@babel/preset-typescript": "^7.17.12",\n        "@types/react": "18.0.5",\n        "react": "18.0.0",\n        "react-dom": "18.0.0",\n        "react-router-dom": "^6.6.2"\n    },\n    "atriConfig": {\n        "pythonPackageName": "python_package_name"\n    }\n}\n')),(0,o.kt)("p",null,"In the above ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json"),", the ",(0,o.kt)("inlineCode",{parentName:"p"},"name")," field will be used by ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," to name your package in the npm's repository."),(0,o.kt)("p",null,"The steps to create a component is the same as described in this ",(0,o.kt)("a",{parentName:"p",href:"#create-a-new-drag-drop-component-in-react"},"section"),"."),(0,o.kt)("p",null,"You can publish your code to npm by running (there is no build step):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm run publish\n")),(0,o.kt)("p",null,"You might have to login into ",(0,o.kt)("inlineCode",{parentName:"p"},"npm")," before running the above code."),(0,o.kt)("p",null,"TODO: Create a utility tool that creates a scaffold for creating component package."),(0,o.kt)("h1",{id:"install-a-third-party-react-drag-drop-component-package"},"Install a third-party React drag-drop component package"),(0,o.kt)("p",null,"You will have to install both the React package and Python package for a component library. You can skip installing Python package if you don't plan to write a backend for your code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"npm install package_name\npip install package_name\n")),(0,o.kt)("p",null,"Once you have installed a component package, change the ",(0,o.kt)("inlineCode",{parentName:"p"},"package.json")," of your Atri project as show below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "dev": "dev-editor -i \'@atrilabs/pwa-builder-manager:@atrilabs/design-system:@atrilabs/forest:@atrilabs/app-design-forest:@atrilabs/utils\' -d \'../example-  atri-app/manifests:package_name\'",\n  }\n}\n')),(0,o.kt)("h1",{id:"create-a-plugin-for-visual-builder"},"Create a plugin for visual builder"),(0,o.kt)("p",null,"Developers can create plugins for the visual builder."),(0,o.kt)("h1",{id:"create-your-own-visual-builder"},"Create your own visual builder"),(0,o.kt)("p",null,"Developers can create their own visual builder by using the building blocks from ",(0,o.kt)("inlineCode",{parentName:"p"},"Atri-Labs/atrilabs-engine"),"."),(0,o.kt)("h1",{id:"plans-on-how-backend-can-be-extended"},"Plans on how backend can be extended"))}d.isMDXComponent=!0}}]);